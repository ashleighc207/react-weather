{"version":3,"sources":["components/Homepage.js","components/Entry.js","App.js","index.js"],"names":["Homepage","props","useLocation","name","zip","useState","localStorage","getItem","firstName","setFirstName","zipCode","setZipCode","data","setData","dateArr","setDateArr","city","setCity","timeOfDay","setTimeOfDay","getWeather","a","async","axios","get","process","response","console","log","setInfo","setItem","useEffect","isCancelled","today","Date","getHours","groups","list","reduce","date","datePoint","dt","getDate","push","newArray","generateDayGroups","className","map","d","key","toLocaleDateString","weekday","month","day","length","getMinutes","main","temp","toFixed","src","weather","icon","description","Entry","setZip","setName","htmlFor","type","value","id","onChange","e","target","to","pathname","App","exact","path","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ca8ce66e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/HomepageStyles.css\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\n\nconst Homepage = ({ props }) => {\n  const { name, zip } = useLocation();\n\n  const [firstName, setFirstName] = useState(\n    localStorage.getItem(\"name\") || name\n  );\n  const [zipCode, setZipCode] = useState(localStorage.getItem(\"zip\") || zip);\n  const [data, setData] = useState({});\n  const [dateArr, setDateArr] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const [timeOfDay, setTimeOfDay] = useState(\"dawn\");\n\n  const getWeather = async () => {\n    try {\n      let response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?zip=${zipCode}&units=imperial&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n      );\n      await setData(response);\n      await setCity(response.data.city.name);\n      return response;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const setInfo = async () => {\n    if (zip && zip != zipCode) {\n      await setZipCode(zip);\n      await localStorage.setItem(\"zip\", zip);\n    }\n    if (name & (name != firstName)) {\n      await setFirstName(name);\n      await localStorage.setItem(\"name\", name);\n    }\n  };\n\n  useEffect(() => {\n    console.log(zip, name, zipCode, firstName);\n    setInfo();\n  }, [zip, zipCode, name, firstName, setInfo, getWeather]);\n\n  useEffect(() => {\n    getWeather();\n  }, [zipCode, firstName]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    if (!isCancelled) {\n      let today = new Date();\n\n      today.getHours() < 5\n        ? setTimeOfDay(\"night\")\n        : today.getHours() < 8\n        ? setTimeOfDay(\"dawn\")\n        : today.getHours() < 12\n        ? setTimeOfDay(\"morning\")\n        : today.getHours() < 17\n        ? setTimeOfDay(\"daytime\")\n        : today.getHours() < 20\n        ? setTimeOfDay(\"sunset\")\n        : setTimeOfDay(\"night\");\n    }\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n\n  const generateDayGroups = () => {\n    let newArray = [];\n    for (var date in data) {\n      newArray.push(data[date]);\n    }\n    setDateArr(newArray);\n    return newArray;\n  };\n\n  useEffect(() => {\n    let isCancelled = false;\n    if (!isCancelled) {\n      if (data.data) {\n        const groups = data.data.list.reduce((groups, date) => {\n          const datePoint = new Date(date.dt * 1000).getDate();\n          if (!groups[datePoint]) {\n            groups[datePoint] = [];\n          }\n          groups[datePoint].push(date);\n          return groups;\n        }, {});\n        setData(groups);\n        console.log(groups);\n      }\n      if (!data.data) {\n        generateDayGroups();\n      }\n    }\n    return () => {\n      isCancelled = true;\n    };\n  }, [data]);\n\n  return (\n    <div className={`main ${timeOfDay}`}>\n      <div className=\"welcome-container\">\n        <div className=\"welcome\">Welcome, {firstName || \"Guest\"}</div>\n        {console.log(city)}\n        <p className=\"today\">\n          Here's your 5-day forecast{city && ` for ${city}`}\n        </p>\n      </div>\n      {dateArr && (\n        <div className=\"date-card-container\">\n          {dateArr &&\n            dateArr.map(d => {\n              return (\n                <div key={d[0].dt} className=\"date-card\">\n                  <span className=\"main-date-title\">\n                    {new Date(d[0].dt * 1000).toLocaleDateString(\"en-US\", {\n                      weekday: \"long\",\n                      month: \"long\",\n                      day: \"numeric\"\n                    })}\n                  </span>\n                  <div\n                    className={`weather-row ${\n                      d.length >= 4 ? \"inset-shadow\" : \"\"\n                    }`}\n                  >\n                    {d.map(date => {\n                      return (\n                        <div key={date.dt} className=\"weather-block\">\n                          <div>\n                            <span className=\"date-time\">\n                              {` @ ${\n                                new Date(date.dt * 1000).getHours() < 12\n                                  ? new Date(date.dt * 1000).getHours()\n                                  : new Date(date.dt * 1000).getHours() - 12\n                              }:${\n                                new Date(date.dt * 1000).getMinutes() < 10\n                                  ? \"0\"\n                                  : \"\"\n                              }${new Date(date.dt * 1000).getMinutes()} ${\n                                new Date(date.dt * 1000).getHours() < 12\n                                  ? \" AM\"\n                                  : \" PM\"\n                              }`}\n                            </span>\n                          </div>\n                          <div>\n                            <span className=\"weather-title \">Temperature:</span>\n                            <span className=\"temp\">{`${date.main.temp.toFixed(\n                              0\n                            )} `}</span>\n                          </div>\n\n                          <div>\n                            <span className=\"weather-title\">Weather:</span>\n                            <div className=\"weather-description\">\n                              <img\n                                className=\"weather-icon\"\n                                src={`http://openweathermap.org/img/w/${date.weather[0].icon}.png`}\n                              />\n                              <span>\n                                {\" \"}\n                                {`${date.weather[0].main} -  ${date.weather[0].description}`}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/EntryStyles.css\";\n\nconst Entry = () => {\n  const [zip, setZip] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  return (\n    <div className=\"main-container\">\n      <h2 className=\"heading\">Welcome to your custom weather report!</h2>\n      <p className=\"description\">\n        This app uses local storage in your browser to save your name and zip\n        code to check the weather. If you clear your storage, you will need to\n        re-enter your information for your forecast.\n      </p>\n      <label className=\"label\" htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={name}\n        id=\"name\"\n        onChange={e => setName(e.target.value)}\n      />\n      <label className=\"label\" htmlFor=\"zip\">\n        Zip Code:\n      </label>\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={zip}\n        id=\"zip\"\n        onChange={e => setZip(e.target.value)}\n      />\n      <Link\n        className=\"button\"\n        to={{\n          pathname: \"/Home\",\n          name: name,\n          zip: zip\n        }}\n      >\n        Save\n      </Link>\n    </div>\n  );\n};\n\nexport default Entry;\n","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport Entry from \"./components/Entry\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={() => <Entry />} />\n        <Route exact path=\"/home\" render={() => <Homepage />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}